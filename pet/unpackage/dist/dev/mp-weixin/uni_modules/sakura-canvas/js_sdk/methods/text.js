"use strict";var G=Object.defineProperty,J=Object.defineProperties;var K=Object.getOwnPropertyDescriptors;var W=Object.getOwnPropertySymbols;var E=Object.prototype.hasOwnProperty,V=Object.prototype.propertyIsEnumerable;var B=(i,e,n)=>e in i?G(i,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):i[e]=n,D=(i,e)=>{for(var n in e||(e={}))E.call(e,n)&&B(i,n,e[n]);if(W)for(var n of W(e))V.call(e,n)&&B(i,n,e[n]);return i},R=(i,e)=>J(i,K(e));var q=(i,e)=>{var n={};for(var t in i)E.call(i,t)&&e.indexOf(t)<0&&(n[t]=i[t]);if(i!=null&&W)for(var t of W(i))e.indexOf(t)<0&&V.call(i,t)&&(n[t]=i[t]);return n};var O=require("../../../../common/vendor.js"),$=require("../utils/util.js");class Q{constructor(e){const{Context:n,commonUtilMethods:t,commonDrawMethods:s}=e;this.Context=n,this.commonUtilMethods=t,this.commonDrawMethods=s}getDrawParams(e={},n=!0){const t=this.commonUtilMethods.getGlobalDataDrawParams(e),{text:s="",textIndent:o=0,lastWidth:c=0,font:h={},textAlign:S="none",baseline:d="top",line:f={},highlightText:u=[],textRect:l={show:!1,isFill:!0,lineWidth:1}}=e,p=R(D({},t),{text:String(s)||"",textIndent:o,lastWidth:c,font:n?this.commonUtilMethods.conversionUnit(this.getFontStyle(h)):this.getFontStyle(h,n),textAlign:S,baseline:d,line:this.getTextLine(f,n),highlightText:u,textRect:l});return n?this.commonUtilMethods.conversionUnit(p):p}draw(e={},n=!0){var N;const{Context:t,commonUtilMethods:s,commonDrawMethods:o}=this,{canvasWidth:c,is2d:h}=s;let{x:S,y:d,w:f,h:u,text:l,textIndent:p,lastWidth:I,font:a,color:m,alpha:U,isFill:g,line:r,windowAlign:y,textAlign:b,baseline:T,highlightText:C,textRect:x,offsetRight:F}=this.getDrawParams(e,n);t.save(),t.beginPath(),o.setAlpha(U),t.font=a.style,h?t.textBaseline=T:t.setTextBaseline(T),typeof l!="string"&&(l+="");let w=e.textArr;if(w||(w=o.computedFontTextLineHeight(S,d,f,l,p,I,a,r,b,y,m,F)),C.length!=0&&(w=this.getHighlightText(w,C,m,a)),x.show){const H=s.conversionUnit(x),{vorizontal:A,vertical:M}=H,P=q(H,["vorizontal","vertical"]),v=w[0];let j=f===c?(N=s.conversionUnit(e).tw)!=null?N:v.w:f,L=v.x-A,z=v.y-M,k=w[w.length-1].y+a.fontSize-v.y;k+=M*2,O.index.getSystemInfoSync().platform==="android"&&(z+=a.fontSize/3,k-=a.fontSize/3),j+=A*2,o.drawParams.drawRect.draw(D({x:L,y:z,w:j,h:k},P),!1)}t.font=a.style,w.forEach(A=>{let{text:M,x:P,y:v,tx:j,ty:L,tw:z,fontColor:_}=A;g?(o.setFillStyle(_),t.fillText(M,P,v)):(o.setStrokeStyle(_),t.strokeText(M,P,v)),r.lineStyle!=="none"&&(g?o.setFillStyle(m):o.setStrokeStyle(m),o.drawParams.drawLine.draw({x:j,y:L,w:z,color:m,lineType:r.lineType,lineWidth:r.lineWidth},!1))}),t.restore(),t.font=this.getFontStyle().style,o.setAlpha(1)}getFontStyle(e={},n=!0){const{size:t,family:s,style:o,variant:c,weight:h}=D(D({},this.commonUtilMethods.fontStyle),e);return{fontSize:t,fontSizeBefore:t,fontFamily:s,fontStyle:o,fontVariant:c,fontWeight:h,style:`${o} ${c} ${h} ${n?this.commonUtilMethods.getConvertedValue(t):t}px ${s}`}}getTextLine(e={},n=!0){const{num:t=-1,height:s=0,style:o="none",type:c="solid",width:h=1}=e;return{lineNum:t,lineHeight:n?this.commonUtilMethods.getConvertedValue(s):s,lineStyle:o,lineType:c,lineWidth:h}}getHighlightText(e,n,t,s){const o=[],c=[],{fontSize:h}=s;n.map(d=>{const{text:f,color:u}=d;return[...f].map(l=>({text:l,color:u}))}).forEach(d=>{const f=d.map(l=>l.text),u=d.map(l=>l.color);o.push(...f),c.push(...u)});const S=[];return e.forEach((d,f)=>{const{x:u,y:l,w:p,text:I,tx:a,ty:m,tw:U}=d,g=[...I];let r=[];for(let y in g){const b=g[y],T=o.findIndex(C=>b==C);if(T!==-1&&T!==-1){const C={text:b,index:y,x:u+$.countTextLength(this.Context,g.join("").substring(0,y),h),fontColor:c[T],y:l,tx:a,ty:m,tw:U,w:p},x=r.length==0?0:Number(r[r.length-1].index),F=Number(C.index);if(F-x>1){const w={text:g.join("").substring(r[x]?x+1:x,F),index:x===0?0:x+1,x:u+$.countTextLength(this.Context,g.join("").substring(0,r[x]?x+1:x),h),fontColor:t,y:l,tx:a,ty:m,tw:U,w:p};S.push(w)}r.push(C),S.push(C)}}if(r.length===0)S.push(R(D({},d),{tx:a,ty:m,tw:U,w:p,fontColor:t}));else{const y=Number(r[r.length-1].index)+1,b=g.length;if(y===b)return;const T={text:g.join("").substring(y,b),index:y,x:u+$.countTextLength(this.Context,g.join("").substring(0,y),h),fontColor:t,y:l,tx:a,ty:m,tw:U,w:p};S.push(T)}}),S}}exports.DrawText=Q;
